import { Link } from 'react-router-dom';
import '../css/app.css';
import { useNavigate } from 'react-router-dom';
import { useEffect } from 'react';

class Logger {
  constructor() {
    this.logs = JSON.parse(localStorage.getItem('app_logs') || '[]');
  }

  log(message, data = null) {
    const timestamp = new Date().toISOString();
    const entry = `${timestamp} [INFO] ${message} ${data ? JSON.stringify(data) : ''}`;
    this._saveLog(entry);
    console.log(`[INFO] ${timestamp} - ${message}`, data || '');
  }

  error(message, error) {
    const timestamp = new Date().toISOString();
    const entry = `${timestamp} [ERROR] ${message} ${error?.stack || ''}`;
    this._saveLog(entry);
    console.error(`[ERROR] ${timestamp} - ${message}`, error);
  }

  _saveLog(entry) {
    this.logs.push(entry);
    if (this.logs.length > 1000) {
      this.logs = this.logs.slice(-1000);
    }
    localStorage.setItem('app_logs', JSON.stringify(this.logs));
  }

  exportLogs() {
    const logText = this.logs.join('\n');
    const blob = new Blob([logText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    
    const a = document.createElement('a');
    a.href = url;
    a.download = `logs_${new Date().toISOString().split('T')[0]}.txt`;
    a.click();
    
    URL.revokeObjectURL(url);
  }

  clearLogs() {
    this.logs = [];
    localStorage.removeItem('app_logs');
  }
}

export const logger = new Logger();

const MainPage = () => {
  const navigate = useNavigate();
  
  useEffect(() => {
    logger.log('MainPage component mounted');
    return () => {
      logger.log('MainPage component unmounted');
    };
  }, []);

  const handleLogout = () => {
    try {
      logger.log('Logout initiated');
      const confirmLogout = window.confirm("–í–∏ —Ç–æ—á–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏?");
      if (confirmLogout) {
        logger.log('User confirmed logout');
        navigate('/mainpage');
      } else {
        logger.log('User cancelled logout');
      }
    } catch (error) {
      logger.error('Error during logout process', error);
    }
  };

  const testimonials = [
    {
      name: "–ê–Ω–¥—Ä—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ",
      role: "–ú–∞–ª–∏–π –±—ñ–∑–Ω–µ—Å",
      text: "–ó–∞–≤–¥—è–∫–∏ –ö—Ä–µ–¥–∏—Ç–Ω–æ–º—É–ü–æ—Ä—Ç–∞–ª—É –∑–Ω–∞–π—à–æ–≤ –≤–∏–≥—ñ–¥–Ω–∏–π –∫—Ä–µ–¥–∏—Ç –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –∫–∞—Ñ–µ. –°—Ç–∞–≤–∫–∞ –Ω–∞ 3% –Ω–∏–∂—á–∞, –Ω—ñ–∂ –ø—Ä–æ–ø–æ–Ω—É–≤–∞–ª–∏ —É –º–æ—î–º—É –±–∞–Ω–∫—É!",
      rating: 5
    },
    {
      name: "–û–ª–µ–Ω–∞ –ü–µ—Ç—Ä–µ–Ω–∫–æ",
      role: "–§—Ä—ñ–ª–∞–Ω—Å–µ—Ä",
      text: "–Ø–∫ —Å–∞–º–æ–∑–∞–π–Ω—è—Ç—ñ–π –º–µ–Ω—ñ –≤–∞–∂–∫–æ –±—É–ª–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—Ä–µ–¥–∏—Ç. –¶–µ–π —Å–µ—Ä–≤—ñ—Å –¥–æ–ø–æ–º—ñ–≥ –∑–Ω–∞–π—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –±–µ–∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–æ—Ö–æ–¥—ñ–≤.",
      rating: 4
    },
    {
      name: "–í—ñ–∫—Ç–æ—Ä –Ü–≤–∞–Ω–µ–Ω–∫–æ",
      role: "IT-—Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç",
      text: "–ü–æ—Ä—ñ–≤–Ω—è–≤ 12 –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π –∑–∞ 5 —Ö–≤–∏–ª–∏–Ω. –û—Ñ–æ—Ä–º–∏–≤ –∫—Ä–µ–¥–∏—Ç –Ω–∞ –∞–≤—Ç–æ –æ–Ω–ª–∞–π–Ω - –±–µ–∑ –≤—ñ–∑–∏—Ç—ñ–≤ —É –±–∞–Ω–∫!",
      rating: 5
    }
  ];

  const stats = [
    { value: "15 000+", label: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤" },
    { value: "‚Ç¥2.5 –º–ª—Ä–¥", label: "–í–∏–¥–∞–Ω–æ –∫—Ä–µ–¥–∏—Ç—ñ–≤" },
    { value: "50+", label: "–ë–∞–Ω–∫—ñ–≤-–ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤" },
    { value: "4.8/5", label: "–°–µ—Ä–µ–¥–Ω—è –æ—Ü—ñ–Ω–∫–∞" }
  ];

  try {
    return (
      <div>
        <header>
          <div className="logo">
            <h1>–ö—Ä–µ–¥–∏—Ç–Ω–∏–π–ü–æ—Ä—Ç–∞–ª</h1>
            <p>–í–∞—à –Ω–∞–¥—ñ–π–Ω–∏–π —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫</p>
          </div>
        </header>
        <nav>
          <ul>
            <li><Link to="/mainpage" onClick={() => logger.log('Navigated to MainPage')}>–ì–æ–ª–æ–≤–Ω–∞</Link></li>
            <li><Link to="/aboutpage" onClick={() => logger.log('Navigated to AboutPage')}>–ü—Ä–æ –Ω–∞—Å</Link></li>
            <li><Link to="/instructionspage" onClick={() => logger.log('Navigated to InstructionsPage')}>–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è</Link></li>
            <li><Link to="/home" onClick={() => logger.log('Navigated to All Credits')}>–í—Å—ñ –∫—Ä–µ–¥–∏—Ç–∏</Link></li>
            <li><Link to="/calculator" onClick={() => logger.log('Navigated to Calculator')}>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</Link></li>
            <li><Link to="/sign_up" onClick={() => logger.log('Navigated to SignUp')}>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</Link></li>
            <li><Link to="/profile" onClick={() => logger.log('Navigated to Profile')}>–ü—Ä–æ—Ñ—ñ–ª—å</Link></li>
            <li><Link to="/portfolio" onClick={() => logger.log('Navigated to Portfolio')}>–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ</Link></li>
            <li><button onClick={handleLogout} className="logout">–í–∏—Ö—ñ–¥</button></li>
          </ul>
        </nav>
        
        <main>
          <section className="hero-banner">
            <div className="hero-content">
              <h2>–ó–Ω–∞–π–¥—ñ—Ç—å —ñ–¥–µ–∞–ª—å–Ω–∏–π –∫—Ä–µ–¥–∏—Ç</h2>
              <p>–ê–∫—Ç—É–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –≤—ñ–¥ 50+ –±–∞–Ω–∫—ñ–≤ —Ç–∞ –∫—Ä–µ–¥–∏—Ç–Ω–∏—Ö —Å–ø—ñ–ª–æ–∫ –£–∫—Ä–∞—ó–Ω–∏</p>
              <Link to="/calculator" className="cta-button" onClick={() => logger.log('Clicked CTA button')}>–ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∫—Ä–µ–¥–∏—Ç</Link>
            </div>
          </section>
          <section className="benefits">
            <h2>–ß–æ–º—É –æ–±–∏—Ä–∞—é—Ç—å –Ω–∞—Å?</h2>
            <div className="benefits-grid">
              <div className="benefit-card">
                <div className="icon">üí≥</div>
                <h3>–ü–æ–≤–Ω–∞ –ø—Ä–æ–∑–æ—Ä—ñ—Å—Ç—å</h3>
                <p>–ñ–æ–¥–Ω–∏—Ö –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏—Ö –∫–æ–º—ñ—Å—ñ–π - –≤–∏ –±–∞—á–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫—Ä–µ–¥–∏—Ç—É</p>
              </div>
              <div className="benefit-card">
                <div className="icon">‚ö°</div>
                <h3>–®–≤–∏–¥–∫–∏–π –ø—ñ–¥–±—ñ—Ä</h3>
                <p>–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è 100+ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π –∑–∞ 2 —Ö–≤–∏–ª–∏–Ω–∏</p>
              </div>
              <div className="benefit-card">
                <div className="icon">üõ°Ô∏è</div>
                <h3>–ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å</h3>
                <p>–ü—Ä–∞—Ü—é—î–º–æ –ª–∏—à–µ –∑ –ª—ñ—Ü–µ–Ω–∑–æ–≤–∞–Ω–∏–º–∏ —Ñ—ñ–Ω–∞–Ω—Å–æ–≤–∏–º–∏ —É—Å—Ç–∞–Ω–æ–≤–∞–º–∏</p>
              </div>
            </div>
          </section>

          <section className="stats-section">
            <h2>–ù–∞—à—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è</h2>
            <div className="stats-grid">
              {stats.map((stat, index) => (
                <div key={index} className="stat-card">
                  <div className="stat-value">{stat.value}</div>
                  <div className="stat-label">{stat.label}</div>
                </div>
              ))}
            </div>
          </section>

          <section className="testimonials">
            <h2>–©–æ –∫–∞–∂—É—Ç—å –Ω–∞—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</h2>
            <div className="testimonials-grid">
              {testimonials.map((testimonial, index) => (
                <div key={index} className="testimonial-card">
                  <div className="rating">
                    {'‚òÖ'.repeat(testimonial.rating)}{'‚òÜ'.repeat(5 - testimonial.rating)}
                  </div>
                  <p className="testimonial-text">"{testimonial.text}"</p>
                  <div className="author">
                    <strong>{testimonial.name}</strong>, {testimonial.role}
                  </div>
                </div>
              ))}
            </div>
          </section>

          <section className="partners">
            <h2>–ù–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏</h2>
            <div className="partners-logos">
              <div className="partner-logo">–ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫</div>
              <div className="partner-logo">–û—â–∞–¥–±–∞–Ω–∫</div>
              <div className="partner-logo">–£–∫—Ä–µ–∫—Å—ñ–º–±–∞–Ω–∫</div>
              <div className="partner-logo">–ö—Ä–µ–¥–∏—Ç–ú–∞—Ä–∫–µ—Ç</div>
            </div>
          </section>
        </main>

        <footer>
          <p>¬© {new Date().getFullYear()} –ö—Ä–µ–¥–∏—Ç–Ω–∏–π–ü–æ—Ä—Ç–∞–ª</p>
          <p>–ö–æ–Ω—Ç–∞–∫—Ç–∏: info@kreditnyportal.ua</p>
          <button 
            onClick={() => logger.exportLogs()}
            style={{
              padding: '8px 16px',
              background: '#4CAF50',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              cursor: 'pointer',
              marginTop: '10px'
            }}
          >
            –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –ª–æ–≥–∏
          </button>
        </footer>
      </div>
    );
  } catch (error) {
    logger.error('Error rendering MainPage', error);
    return (
      <div className="error-message">
        <h2>–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞</h2>
        <p>–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–±–æ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –ø—ñ–∑–Ω—ñ—à–µ.</p>
      </div>
    );
  }
};

export default MainPage;